# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
    branches:
      - "master"

name: "Continuous Integration"

jobs:
  composer-normalize:
    name: "composer-normalize"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: "Run composer normalize"
        uses: docker://ergebnis/composer-normalize-action:0.8.0

      - name: "Commit normalized composer.json"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Normalize composer.json
          branch: ${{ github.head_ref }}

  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Validate composer.json and composer.lock"
        run: php7.4 /usr/bin/composer validate

      - name: "Install locked dependencies with composer"
        run: php7.4 /usr/bin/composer install --no-interaction --no-progress

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install locked dependencies with composer"
        run: php7.4 /usr/bin/composer install --no-interaction --no-progress

      - name: "Run phpstan/phpstan"
        run: php7.4 vendor/bin/phpstan analyse --configuration=phpstan.neon

  tests:
    name: "Tests"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4
          - 8.0

        dependencies:
          - lowest
          - locked
          - highest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: mbstring
          php-version: ${{ matrix.php-version }}

      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-lowest --no-interaction --no-progress

      - name: "Install locked dependencies with composer"
        if: matrix.dependencies == 'locked'
        run: composer install --no-interaction --no-progress

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: composer update --no-interaction --no-progress

      - name: "Run unit tests with phpunit/phpunit"
        run: vendor/bin/phpunit

  examples:
    name: "Examples"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        example:
          - install
          - simple

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: mbstring
          php-version: 7.4
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Run the integration tests in each example"
        run: cd examples/${{ matrix.example }} && ./test.sh

  code-coverage:
    name: "Code Coverage"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          extensions: mbstring
          php-version: 7.4

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: vendor/bin/phpunit --coverage-clover=build/logs/clover.xml

      # Not using codecov/codecov-action for now, as the build is prohibitively slow
      - name: "Download code coverage uploader for Codecov.io"
        run: curl -s https://codecov.io/bash -o codecov

      - name: "Send code coverage report to Codecov.io"
        run: bash codecov -t ${{ secrets.CODECOV_TOKEN }}

  mutation-tests:
    name: "Mutation Tests"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: xdebug
          extensions: mbstring
          php-version: 7.4

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress

      - name: "Run mutation tests with infection/infection"
        run: vendor/bin/infection
