type Query {
    withDefaultDate(value: DefaultDate!): DefaultDate!
    withDefaultEnum(value: DefaultEnum!): DefaultEnum!
    withCustomEnum(value: CustomEnum): CustomEnum
    withBenSampoEnum(value: BenSampoEnum): BenSampoEnum
    withEnumInput(input: EnumInput): EnumObject
    withCustomObject(value: CustomInput): CustomOutput
    withNestedCustomObject: NestedCustomObject
}

type EnumObject {
    default: DefaultEnum
    custom: CustomEnum
}

input EnumInput {
    default: DefaultEnum
    custom: CustomEnum
}

enum DefaultEnum {
    A
    B
}

enum CustomEnum {
    A
    B
}

enum BenSampoEnum {
    A
    B
}

scalar DefaultDate

scalar CustomDate

input CustomInput {
    foo: String!
}

type CustomOutput {
    foo: String!
}

type NestedCustomObject {
    bar: CustomOutput
    baz: CustomOutput
}
